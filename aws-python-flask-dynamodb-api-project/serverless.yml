org: textractapp
app: aws-python-flask-dynamodb-api-project
service: aws-python-flask-dynamodb-api-project
frameworkVersion: '3'

custom:
  wsgi:
    app: app.app

provider:
  name: aws
  runtime: python3.9
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - 'dynamodb:*'
            - 'textract:*'
            - 's3:*'
          Resource: '*'
  environment:
    TABLE_NAME: ${self:service}-files
    BUCKET_NAME: ${self:service}-files-bucket
    PROJECT_NAME: ${self:service}-files-project

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'

  process_file:
    handler: app.process_file
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          existing: true

  callback:
    handler: app.callback
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ files, StreamArn ]
          filterPatterns:
            - eventName: [ MODIFY ]

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-plugin-existing-s3

resources:
  Resources:
    files:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: file_id
            AttributeType: S
        KeySchema:
          - AttributeName: file_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    filesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        VersioningConfiguration:
          Status: Enabled
